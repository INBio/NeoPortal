<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Scans the classpath of this application for @Components to deploy as beans -->
	<context:component-scan 
		base-package="org.inbio.neoportal.web, 
					org.inbio.neoportal.service.dto,
					org.inbio.neoportal.core.common.dto" />

	<!--
        Setup a simple strategy: 
           1. Take all /api the defaults.
           2. Return json by default when not sure. 
       -->
  <beans:bean id="contentNegotiationManager"
             class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
       <beans:property name="defaultContentType" value="application/json" />
       <beans:property name="ignoreAcceptHeader" value="false" />
       <beans:property name="mediaTypes">
            <beans:map>
                <beans:entry key="json" value="application/json" />
                <beans:entry key="xml" value="application/xml" />
            </beans:map>
        </beans:property>
  </beans:bean>
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters>
	        <beans:bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
	            <beans:property name="marshaller" ref="marshaller" />
	            <beans:property name="unmarshaller" ref="marshaller" />
	        </beans:bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
	<oxm:jaxb2-marshaller id="marshaller" >
		<oxm:class-to-be-bound name="org.inbio.neoportal.web.common.Wrapper"/>
		<oxm:class-to-be-bound name="org.inbio.neoportal.service.dto.species.TaxonDescriptionFullSDTO"/>
	</oxm:jaxb2-marshaller>
	
<!-- 	revisar!!!! -->
	<mvc:interceptors>
		<beans:bean class="org.inbio.neoportal.web.common.RequestTimeInterceptor"/>
	</mvc:interceptors>
    	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
    <mvc:resources mapping="/themes/**" location="/themes/" />

<!-- VIEW RESOLVERS -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="viewResolver" 
             class="org.springframework.web.servlet.view.XmlViewResolver">
      <beans:property name="location" value="/WEB-INF/views.xml"/>
    </beans:bean>
	
	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />

    <!--Resolves the themes applied to the views-->
    <beans:bean id="themeResolver" class="org.springframework.web.servlet.theme.CookieThemeResolver">
        <beans:property name="defaultThemeName" value="default"/>
    </beans:bean>
    <beans:bean id="themeSource" class="org.springframework.ui.context.support.ResourceBundleThemeSource">
        <beans:property name="basenamePrefix" value="theme-"/>
    </beans:bean>
	
<!-- i18n -->	
    <!-- Configure message for i18n using spring. Add aditional properties files to the list -->
    <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <beans:property name="basenames">
	      <beans:list>
	        <beans:value>classpath:messages</beans:value>
	        <beans:value>classpath:messages_advancedSearch</beans:value>
	      </beans:list>
	    </beans:property>
	    <beans:property name="defaultEncoding" value="UTF-8" />
    </beans:bean>
    
</beans:beans>
